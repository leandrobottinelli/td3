     1                                  
     2                                    ;Entro a modo_proteg
     3                                    ; Necesito copiar la funcion copy en rutinas
     4                                    ; Llamo a la funcion copy para que me copie la ROM a nucleo
     5                                  
     6                                  
     7                                  EXTERN __FIN_PILA
     8                                  EXTERN __SIZE_PILA
     9                                  
    10                                  EXTERN COPY_INIT
    11                                  EXTERN __INICIO_ROM_RUTINAS
    12                                  EXTERN __INICIO_ROM
    13                                  EXTERN __INICIO_NUCLEO
    14                                  EXTERN __INICIO_RAM_RUTINAS
    15                                  EXTERN __LONGITUD_RUTINAS
    16                                  EXTERN __LONGITUD_ROM 
    17                                  
    18                                  section .reset
    19                                  arranque:
    20                                  USE16
    21 00000000 B80000                  mov ax,0
    22 00000003 FFE0                    jmp ax
    23                                  ;salto a inicio16
    24 00000005 00<rept>                times 16-($-arranque) db 0
    25                                  
    26                                  section .init
    27 00000000 EB1E                    jmp inicio
    28                                  gdt:
    29 00000002 0000000000000000                  db 0,0,0,0,0,0,0,0  ;Descriptor nulo
    30                                  ds_sel    equ $-gdt
    31 0000000A FFFF00000092CF00                  db 0xFF, 0xFF, 0, 0, 0, 0x92, 0xCF, 0
    32                                  cs_sel    equ $-gdt
    33 00000012 FFFF0000009ACF00                  db 0xFF, 0xFF, 0, 0, 0, 0x9A, 0xCF, 0
    34                                  
    35                                  long_gdt equ $-gdt
    36                                  
    37                                  img_gdtr:
    38 0000001A 1700                    		  dw long_gdt-1
    39 0000001C [02000000]              		  dd gdt
    40                                  
    41                                  
    42                                  inicio:		  
    43 00000020 FA                       cli       ;Deshabilito interrupciones
    44                                   
    45                                  
    46 00000021 66                        db 0x66            ;Requerido para direcciones mayores
    47 00000022 2E0F0116[1A00]            lgdt  [cs:img_gdtr] ;que 0x00FFFFFFF. 
    48 00000028 0F20C0                    mov eax,cr0        ;Habiltaci√≥n bit de modo protegido. 
    49 0000002B 6683C801                  or eax,1
    50 0000002F 0F22C0                    mov cr0,eax
    51                                   	
    52 00000032 66EA[3A000000]1000       jmp dword cs_sel:modo_proteg
    53                                   
    54                                  USE32
    55                                  modo_proteg:
    56 0000003A 6687DB                    xchg bx,bx
    57                                  
    58 0000003D 66B80800                  mov ax,ds_sel
    59 00000041 8ED8                      mov ds,ax
    60 00000043 8ED0                      mov ss,ax
    61 00000045 BC[00000000]              mov esp,__FIN_PILA
    62                                  
    63                                  
    64 0000004A 68[00000000]              push __INICIO_ROM_RUTINAS
    65 0000004F 68[00000000]              push __INICIO_RAM_RUTINAS
    66 00000054 68[00000000]              push __LONGITUD_RUTINAS
    67                                  
    68 00000059 E8(00000000)              call __INICIO_ROM_RUTINAS ;esta es la direccion VMA
    69                                  
    70 0000005E 58                        pop eax
    71 0000005F 58                        pop eax
    72 00000060 58                        pop eax
    73                                  
    74                                  
    75 00000061 68[00000000]              push __INICIO_ROM;copio el resto de la rom a una seccion de la ram
    76 00000066 68[00000000]              push __INICIO_NUCLEO
    77 0000006B 68[00000000]              push __LONGITUD_ROM ;__LONGITUD_ROM 
    78                                  
    79 00000070 E8(00000000)              call COPY_INIT
    80                                    
    81 00000075 58                        pop eax
    82 00000076 58                        pop eax
    83 00000077 58                        pop eax
    84                                  
    85 00000078 E9(00000000)              jmp __INICIO_NUCLEO ;call? PREGUNTAR
    86                                  
    87                                  section .nucleo
    88                                  
    89                                  nucleos:   
    90 00000000 AB                        db 0xAB
    91 00000001 BB                        db 0xBB
    92 00000002 CE                        db 0xCE
    93 00000003 EE                        db 0xEE
    94 00000004 EBFE                      jmp $ 
    95                                  
    96                                  ;long_nucleo EQU $-nucleos			
    97                                  
    98                                  	
    99                                  
   100                                  
   101                                  
   102                                   
   103                                  
