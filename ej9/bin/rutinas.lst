     1                                  GLOBAL CARGAR_TABLA
     2                                  GLOBAL CARGAR_TABLA_2
     3                                  GLOBAL SUMA_TABLA_DIGITOS
     4                                  
     5                                  EXTERN _CONTADOR_TECLAS
     6                                  EXTERN _ENTRADA_TABLA
     7                                  EXTERN _CONTADOR_TECLAS_BYTES
     8                                  EXTERN __INICIO_RAM_TABLA_DIGITOS
     9                                  EXTERN _flag_16_TECLAS
    10                                  EXTERN _NUMERO_TOTAL
    11                                  
    12                                  
    13                                  
    14                                  
    15                                  section .rutinas
    16                                  USE32
    17                                  
    18                                  
    19                                  ;-----------------------------------------------------------------------------------
    20                                  ;-----------------------------------------------------------------------------------
    21                                  
    22                                  CARGAR_TABLA:
    23                                  
    24 00000000 89E5                        mov ebp, esp  
    25 00000002 8A4504                      mov al, [ebp + 4]						    ;Recibo por la pila, el valor de la tecla
    26 00000005 8B0D[00000000]              mov ecx, [_CONTADOR_TECLAS]     		    ;Cargo valor del contador,ultima pocision de tecla guardada
    27 0000000B 8881[00000000]              mov [__INICIO_RAM_TABLA_DIGITOS + ecx], al  ;Guardo la tecla en el vector
    28                                                                     				; de la tabla, indicada por el contador
    29 00000011 41                          inc ecx
    30 00000012 83F910                      cmp ecx, 0x10		                        ;Comparo si llego a 16 bytes
    31 00000015 7402                        jz RESET_CONTADOR
    32 00000017 EB10                        jmp INCREMENTO_CONTADOR
    33                                  
    34                                  
    35                                      RESET_CONTADOR:
    36 00000019 66BB0100                    mov bx, 0x01			
    37 0000001D 66891D[00000000]            mov [_flag_16_TECLAS], bx	;Activo el flag de que supero las 16 teclas
    38                                  
    39 00000024 B900000000                  mov ecx, 0x0				;Reinicio contador a 0, para poder seguir
    40                                      							;guardando en el mismo vector
    41                                  
    42                                      INCREMENTO_CONTADOR:
    43 00000029 890D[00000000]              mov [_CONTADOR_TECLAS], ecx     ;Guardo el valor del contador incrementado
    44 0000002F C3                          ret                            ;para apuntar al siguiente digito de la tabla
    45                                  
    46                                  ;-----------------------------------------------------------------------------------
    47                                  ;-----------------------------------------------------------------------------------
    48                                  
    49                                  
    50                                  CARGAR_TABLA_2:
    51                                  
    52 00000030 8B0D[00000000]          	mov ecx, [_flag_16_TECLAS]
    53 00000036 83F901                      cmp ecx, 0x01				;Chequeo si hay 16 teclas y el contador di
    54 00000039 7408                        jz TECLAS_16 				;la vuelta, ultimo bit paso 0xF
    55                                  
    56 0000003B 8B0D[00000000]              mov ecx,[_CONTADOR_TECLAS]	; Si hay menos de 16, cargo la cantidad de teclas
    57 00000041 EB1A                        jmp CEROS 					
    58                                  
    59                                      
    60                                     	TECLAS_16:			         
    61 00000043 66BB0000                	mov bx, 0x0					 ;Reseteo el flag de la funcion CARGAR_TABLA
    62 00000047 66891D[00000000]        	mov [_flag_16_TECLAS], bx	 ;que me indica que hubo mas de 16 teclas.
    63 0000004E B910000000                  mov ecx, 0x10				 ;Cargo que la cantidad de teclas son 16
    64 00000053 D1E9                        shr ecx, 0x1                 ;Divido por 2, porque voy a juntar de a 2 hexas en 1 byte
    65 00000055 8B15[00000000]              mov edx, [_CONTADOR_TECLAS_BYTES] ;Cargo la pocision de la entrada de la tabla
    66 0000005B EB44                        jmp GUARDADO_NUMERO
    67                                  
    68                                  
    69                                  
    70                                  
    71                                  	CEROS:				;Completo las pocisiones de las teclas faltantes a 16 con 0				
    72 0000005D B000                    	mov al, 0x00			
    73 0000005F 8881[00000000]          	mov [__INICIO_RAM_TABLA_DIGITOS + ecx], al             
    74                                  
    75 00000065 41                        inc ecx
    76 00000066 83F910                  	cmp ecx, 0x10 		;Chequeo si llegue a la tecla numero 16
    77 00000069 7402                    	jz PARIDAD
    78 0000006B EBF0                    	jmp CEROS
    79                                      
    80                                  	
    81                                  
    82                                  	PARIDAD:    
    83 0000006D 8B0D[00000000]          	mov ecx,[_CONTADOR_TECLAS] 
    84 00000073 F7C101000000               	test ecx,1  				; Compruebo si el numero de teclas ingresadas
    85 00000079 7502                       	jnz IMPAR       			; son pares o impares
    86 0000007B EB1C                       	jmp PAR
    87                                     	
    88                                  
    89                                     	IMPAR:
    90 0000007D 8B15[00000000]             	mov edx, [_CONTADOR_TECLAS_BYTES]
    91 00000083 42                         	inc edx
    92                                  
    93 00000084 A0[00000000]               	mov al,[__INICIO_RAM_TABLA_DIGITOS] ;Cargo la tecla mas significativa
    94 00000089 8B1D[00000000]             	mov ebx,[_ENTRADA_TABLA] 
    95 0000008F 41                         	inc ecx  					;Lo hago PAR redondeando para arriba 
    96 00000090 D1E9                    	shr ecx, 0x1 				;Divido por 2, porque voy a juntar de a 2 hexas en 1 byte
    97                                  
    98 00000092 88440BFF                    mov [ebx + ecx - 0x1], al	;Guardo en la primera pocision, la primer tecla
    99 00000096 49                          dec ecx						;que tiene cargada la letra y un cero.
   100 00000097 EB08                       	jmp GUARDADO_NUMERO
   101                                  
   102                                  
   103                                  
   104                                     	PAR:
   105 00000099 8B15[00000000]             	mov edx, [_CONTADOR_TECLAS_BYTES]
   106 0000009F D1E9                        shr ecx, 0x1 ;Divido por 2, porque voy a juntar de a 2 hexas en 1 byte
   107                                  
   108                                  
   109                                  	GUARDADO_NUMERO: 
   110                                  
   111 000000A1 8A82[00000000]             	mov al,[__INICIO_RAM_TABLA_DIGITOS + edx] ;Recorro las tecla y la siguiente
   112 000000A7 8A9A[01000000]             	mov bl,[__INICIO_RAM_TABLA_DIGITOS + edx + 0x1]
   113 000000AD 83C202                     	add edx, 0x2 ;En el siguiente ciclo, agarro las 2 siguientes
   114 000000B0 8915[00000000]             	mov [_CONTADOR_TECLAS_BYTES], edx 
   115                                  
   116                                  
   117                                  
   118 000000B6 C0E004                     	shl al, 0x4  				;Desplazo el primer byte 4 pocisiones
   119 000000B9 08D8                       	or al, bl	 				;y sumo el hexa de la primera tecla y la segunda
   120                                  
   121 000000BB 8B1D[00000000]             	mov ebx,[_ENTRADA_TABLA]    ;Cargo el valor de que entrada de la Tabla estoy
   122 000000C1 88440BFF                    mov [ebx + ecx - 0x1], al 	;Guardo el byte de las dos teclas
   123 000000C5 49                          dec ecx
   124 000000C6 75D9                        jne GUARDADO_NUMERO ;Repito hasta que el contador de cantidad de teclas llegue a cero
   125 000000C8 EB00                        jmp RESET_CONTADOR_2
   126                                  
   127                                  
   128                                      RESET_CONTADOR_2:
   129 000000CA 83C110                      add ecx, 0x10  
   130 000000CD BA00000000                  mov edx, 0x00  
   131 000000D2 8915[00000000]              mov [_CONTADOR_TECLAS_BYTES], edx ; Reseteo el contador que barre las teclas de a dos
   132 000000D8 8915[00000000]              mov [_CONTADOR_TECLAS], edx 	  ; Reseteo el contador con la cantidad de teclas
   133 000000DE 010D[00000000]              add [_ENTRADA_TABLA], ecx         ; Guardo el valor del contador incrementado
   134 000000E4 C3                          ret                               ; para apuntar a la siguiente entrada de la tabla
   135                                  ;----------------------------------------------------------------------------------------------------
   136                                  ;----------------------------------------------------------------------------------------------------
   137                                  
   138                                  
   139                                  section .tarea_1
   140                                  
   141                                  SUMA_TABLA_DIGITOS:
   142                                  
   143 00000000 B800000000                  mov eax, 0x00
   144 00000005 BA[10000000]                mov edx, __INICIO_RAM_TABLA_DIGITOS + 0x10
   145 0000000A A3[00000000]                mov [_NUMERO_TOTAL], eax
   146 0000000F A3[04000000]                mov [_NUMERO_TOTAL + 0x04], eax
   147                                  
   148                                      ;xchg bx, bx
   149                                  
   150                                  
   151                                      LP:
   152 00000014 3B15[00000000]              cmp edx, [_ENTRADA_TABLA]
   153 0000001A 7421                        jz RESULTADO
   154 0000001C 8B02                        mov eax,[edx]
   155 0000001E 0105[00000000]              add [_NUMERO_TOTAL], eax
   156 00000024 8B4204                      mov eax,[edx+0x04]
   157 00000027 7202                        jc CARRY
   158 00000029 EB07                        jmp LP2   
   159                                  
   160                                  
   161                                  
   162                                      CARRY: 
   163 0000002B 8005[04000000]01            add byte[_NUMERO_TOTAL+0x04], 0x01
   164                                  
   165                                  
   166                                  
   167                                      LP2:
   168 00000032 0105[04000000]              add [_NUMERO_TOTAL+0x04], eax
   169 00000038 83C210                      add edx , 0x10
   170                                  
   171 0000003B EBD7                        jmp LP
   172                                  
   173                                      RESULTADO:
   174                                  
   175                                  
   176 0000003D C3                          ret
