     1                                  ;Pasos del programa:
     2                                  ;-------------------
     3                                    ; Entro a modo_proteg
     4                                    ; Copio la funcion copy en rutinas(RAM)
     5                                    ; Llamo a la funcion copy para que me copie la ROM a nucleo (RAM)
     6                                    ;
     7                                    ; Voy a pol:, donde llamo funcion pooling para el teclado
     8                                    ; En pooling del teclado pregunto por si hubo tecla y despues cual fue
     9                                    ; Si la tecla fue "s" voy a FIN_POLLING y hago halt
    10                                    ; Si es cualquier otra tecla, llamo a la funcion CARGAR_TABLA 
    11                                    ; Almaceno cada tecla en la tabla, para moverme uso _CONTADOR_TABLA
    12                                    ; El cual esta en .datos, asi que guardo en la pocision que tiene el contador
    13                                    ; Y luego de alamacenada la tecla en la posicion indicada, incremento el contador
    14                                    ; Finalmente guardo el nuevo valor del contador y vuelvo a pooling.
    15                                  
    16                                    ; NOTA: Las teclas las paso a traves de la pila   
    17                                  ;-----------------------------------------------------------------------
    18                                  EXTERN __FIN_PILA
    19                                  EXTERN __SIZE_PILA
    20                                  
    21                                  EXTERN COPY_INIT
    22                                  EXTERN POLLING
    23                                  
    24                                  EXTERN __INICIO_RAM_RUTINAS
    25                                  EXTERN __INICIO_ROM_RUTINAS
    26                                  EXTERN __INICIO_ROM
    27                                  EXTERN __INICIO_RAM_NUCLEO
    28                                  EXTERN __INICIO_ROM_NUCLEO
    29                                  
    30                                  EXTERN __INICIO_RAM_IDT
    31                                  EXTERN __INICIO_ROM_IDT
    32                                  EXTERN __LONGITUD_IDT
    33                                  
    34                                  EXTERN __INICIO_RAM_TECLADO_RUTINA
    35                                  EXTERN __INICIO_ROM_TECLADO_RUTINA
    36                                  
    37                                  EXTERN __INICIO_ROM_TABLA_DIGITOS 
    38                                  EXTERN __INICIO_RAM_TABLA_DIGITOS 
    39                                  
    40                                  EXTERN __INICIO_ROM_DATOS 
    41                                  EXTERN __INICIO_RAM_DATOS
    42                                  
    43                                  
    44                                  EXTERN __LONGITUD_RUTINAS
    45                                  EXTERN __LONGITUD_ROM
    46                                  EXTERN __LONGITUD_TECLADO_RUTINA
    47                                  EXTERN __LONGITUD_DATOS
    48                                  
    49                                  GLOBAL _CONTADOR_TABLA
    50                                  GLOBAL FIN_POLLING
    51                                  
    52                                  EXTERN img_gdtr
    53                                  EXTERN img_idtr
    54                                  
    55                                  EXTERN cs_sel
    56                                  EXTERN ds_sel
    57                                  
    58                                  EXTERN _pic_configure
    59                                  EXTERN _pit_configure
    60                                  
    61                                  
    62                                  section .reset
    63                                  arranque:
    64                                  USE16
    65 00000000 B80000                  mov ax,0
    66 00000003 FFE0                    jmp ax
    67                                  ;salto a inicio16
    68 00000005 00<rept>                times 16-($-arranque) db 0
    69                                  
    70                                  section .init
    71                                  
    72                                  inicio:
    73                                  
    74 00000000 FA                        cli       ;Deshabilito interrupciones
    75 00000001 66                        db 0x66            ;Requerido para direcciones mayores
    76 00000002 2E0F0116[0000]            lgdt [cs:img_gdtr] ;que 0x00FFFFFFF. 
    77 00000008 0F20C0                    mov eax,cr0        ;Habiltaci√≥n bit de modo protegido. 
    78 0000000B 6683C801                  or eax,1
    79 0000000F 0F22C0                    mov cr0,eax
    80                                   	
    81 00000012 66EA[1A000000]-          jmp dword cs_sel:modo_proteg
    81 00000018 [0000]             
    82                                  
    83                                  
    84                                   
    85                                  USE32
    86                                  modo_proteg:
    87 0000001A 6687DB                    xchg bx,bx
    88                                  
    89 0000001D 66B8[0000]                mov ax,ds_sel
    90 00000021 8ED8                      mov ds,ax
    91 00000023 8ED0                      mov ss,ax
    92 00000025 BC[00000000]              mov esp,__FIN_PILA
    93                                  
    94                                  
    95 0000002A 68[00000000]              push __INICIO_ROM_RUTINAS
    96 0000002F 68[00000000]              push __INICIO_RAM_RUTINAS
    97 00000034 68[00000000]              push __LONGITUD_RUTINAS
    98                                  
    99 00000039 E8(00000000)              call __INICIO_ROM_RUTINAS ;Copio la funcion copy en RAM a mano
   100                                  
   101 0000003E 58                        pop eax
   102 0000003F 58                        pop eax
   103 00000040 58                        pop eax
   104                                  
   105                                  
   106                                  
   107 00000041 68[00000000]              push __INICIO_ROM_NUCLEO
   108 00000046 68[00000000]              push __INICIO_RAM_NUCLEO
   109 0000004B 68[00000000]              push __LONGITUD_ROM
   110                                  
   111                                  
   112 00000050 E8(00000000)              call COPY_INIT            ;Copio toda la ROM en RAM desde
   113 00000055 58                        pop eax                   ;funcion copy en RAM
   114 00000056 58                        pop eax
   115 00000057 58                        pop eax
   116                                  
   117                                  
   118                                  
   119                                  
   120 00000058 E9(00000000)              jmp nucleos
   121                                   
   122                                  
   123                                   ;----------------------------------------------------------------------
   124                                  
   125                                  section .nucleo
   126                                  
   127                                  
   128                                  nucleos:   
   129                                  
   130 00000000 68[00000000]              push __INICIO_ROM_TECLADO_RUTINA
   131 00000005 68[00000000]              push __INICIO_RAM_TECLADO_RUTINA
   132 0000000A 68[00000000]              push __LONGITUD_TECLADO_RUTINA 
   133                                  
   134 0000000F E8(00000000)              call COPY_INIT
   135                                    
   136 00000014 58                        pop eax
   137 00000015 58                        pop eax
   138 00000016 58                        pop eax
   139                                  
   140                                  
   141                                  
   142 00000017 68[00000000]              push __INICIO_ROM_IDT
   143 0000001C 68[00000000]              push __INICIO_RAM_IDT
   144 00000021 68[00000000]              push __LONGITUD_IDT
   145                                  
   146 00000026 E8(00000000)              call COPY_INIT              ;Copio la IDT a sys_tables(RAM)
   147                                      
   148 0000002B 58                        pop eax
   149 0000002C 58                        pop eax
   150 0000002D 58                        pop eax
   151                                  
   152                                  
   153                                  
   154 0000002E 68[00000000]              push __INICIO_ROM_DATOS
   155 00000033 68[00000000]              push __INICIO_RAM_DATOS
   156 00000038 68[00000000]              push __LONGITUD_DATOS
   157                                  
   158 0000003D E8(00000000)              call COPY_INIT                ;Copio seccion de datos. Contador de la tabla de digitos
   159                                    
   160 00000042 58                        pop eax
   161 00000043 58                        pop eax
   162 00000044 58                        pop eax
   163                                  
   164                                  
   165 00000045 0F011D[00000000]        lidt [img_idtr]                    ;VER---------------------------
   166 0000004C E8(00000000)            call _pic_configure
   167 00000051 E8(00000000)            call _pit_configure
   168 00000056 6687DB                  xchg bx, bx
   169                                  
   170                                  
   171                                  pol:
   172 00000059 E8(00000000)              call POLLING       ; Voy a la funcion de pooling en forma de loop         
   173 0000005E EBF9                      jmp pol            ; hasta la tecla "s"
   174                                  
   175                                  FIN_POLLING:
   176 00000060 90                        nop 
   177 00000061 F4                        hlt               ; Se presiono tecla "s", hago halt de todo
   178 00000062 EBFC                      jmp FIN_POLLING
   179                                  
   180                                  ;----------------------------------------------------------------------
   181                                  section .datos
   182                                  
   183 00000000 [0000000000000000]      _CONTADOR_TABLA: dq __INICIO_RAM_TABLA_DIGITOS 
   183          ******************       warning: 64-bit unsigned relocation zero-extended from 32 bits
 [-w+zext-reloc]
   184                                  
   185                                  
   186                                  
   187                                  
   188                                   
   189                                  
